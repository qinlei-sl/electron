{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_components/alert.component.ts","webpack:///src/app/_components/alert.component.html","webpack:///src/app/_components/index.ts","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/fake-backend.ts","webpack:///src/app/_helpers/index.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_models/alert.ts","webpack:///src/app/_models/index.ts","webpack:///src/app/_models/user.ts","webpack:///src/app/_services/account.service.ts","webpack:///src/app/_services/alert.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/add-user/add-user.component.ts","webpack:///src/app/add-user/add-user.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/index.ts","webpack:///src/app/user-table/user-table.component.ts","webpack:///src/app/user-table/user-table.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlertComponent","router","alertService","fade","alerts","alertSubscription","onAlert","subscribe","alert","message","filter","x","keepAfterRouteChange","forEach","push","autoClose","setTimeout","removeAlert","routeSubscription","events","event","clear","unsubscribe","includes","find","classes","alertTypeClass","Success","Info","Warning","type","join","selector","templateUrl","AuthGuard","accountService","route","state","user","userValue","navigate","queryParams","returnUrl","url","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","logout","error","statusText","users","JSON","parse","localStorage","getItem","FakeBackendInterceptor","method","headers","body","handleRoute","endsWith","authenticate","register","getUsers","match","getUserById","updateUser","deleteUser","username","password","ok","firstName","lastName","token","length","Math","max","map","setItem","stringify","isLoggedIn","unauthorized","idFromUrl","params","Object","assign","get","urlParts","split","parseInt","fakeBackendProvider","provide","useClass","multi","JwtInterceptor","isApiUrl","startsWith","apiUrl","clone","setHeaders","Authorization","Alert","init","AlertType","User","AccountService","http","userSubject","asObservable","post","removeItem","put","value","AlertService","subject","defaultId","options","AddUserComponent","formBuilder","snapshot","flag","getAll","passwordValidators","minLength","isAddMode","required","form","group","getById","f","setValue","change","create","update","data","success","relativeTo","controls","onsubmit","styleUrls","accountModule","AccountModule","usersModule","UsersModule","routes","path","component","canActivate","loadChildren","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","AppModule","useValue","declarations","providers","bootstrap","HomeComponent","UserTableComponent","isDeleting","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Alert, AlertType } from '@app/_models';\r\nimport { AlertService } from '@app/_services';\r\n\r\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n    @Input() id = 'default-alert';\r\n    @Input() fade = true;\r\n\r\n    alerts: Alert[] = [];\r\n    alertSubscription: Subscription;\r\n    routeSubscription: Subscription;\r\n\r\n    constructor(private router: Router, private alertService: AlertService) { }\r\n\r\n    ngOnInit() {\r\n        // subscribe to new alert notifications\r\n        this.alertSubscription = this.alertService.onAlert(this.id)\r\n            .subscribe(alert => {\r\n                // clear alerts when an empty alert is received\r\n                if (!alert.message) {\r\n                    // filter out alerts without 'keepAfterRouteChange' flag\r\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\r\n\r\n                    // remove 'keepAfterRouteChange' flag on the rest\r\n                    this.alerts.forEach(x => delete x.keepAfterRouteChange);\r\n                    return;\r\n                }\r\n\r\n                // add alert to array\r\n                this.alerts.push(alert);\r\n\r\n                // auto close alert if required\r\n                if (alert.autoClose) {\r\n                    setTimeout(() => this.removeAlert(alert), 3000);\r\n                }\r\n           });\r\n\r\n        // clear alerts on location change\r\n        this.routeSubscription = this.router.events.subscribe(event => {\r\n            if (event instanceof NavigationStart) {\r\n                this.alertService.clear(this.id);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // unsubscribe to avoid memory leaks\r\n        this.alertSubscription.unsubscribe();\r\n        this.routeSubscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert: Alert) {\r\n        // check if already removed to prevent error on auto close\r\n        if (!this.alerts.includes(alert)) return;\r\n\r\n        if (this.fade) {\r\n            // fade out alert\r\n            this.alerts.find(x => x === alert).fade = true;\r\n\r\n            // remove alert after faded out\r\n            setTimeout(() => {\r\n                this.alerts = this.alerts.filter(x => x !== alert);\r\n            }, 250);\r\n        } else {\r\n            // remove alert\r\n            this.alerts = this.alerts.filter(x => x !== alert);\r\n        }\r\n    }\r\n\r\n    cssClass(alert: Alert) {\r\n        if (!alert) return;\r\n\r\n        const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\r\n                \r\n        const alertTypeClass = {\r\n            [AlertType.Success]: 'alert alert-success',\r\n            [AlertType.Error]: 'alert alert-danger',\r\n            [AlertType.Info]: 'alert alert-info',\r\n            [AlertType.Warning]: 'alert alert-warning'\r\n        }\r\n\r\n        classes.push(alertTypeClass[alert.type]);\r\n\r\n        if (alert.fade) {\r\n            classes.push('fade');\r\n        }\r\n\r\n        return classes.join(' ');\r\n    }\r\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\r\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n    <span [innerHTML]=\"alert.message\"></span>\r\n</div>","export * from './alert.component';\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AccountService } from '@app/_services';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private accountService: AccountService\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const user = this.accountService.userValue;\r\n        if (user) {\r\n            // authorised so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '@app/_services';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.accountService.logout();\r\n            }\r\n            \r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\n\r\n// array in local storage for registered users\r\nlet users = JSON.parse(localStorage.getItem('users')) || [];\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null)\r\n            .pipe(mergeMap(handleRoute))\r\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n            .pipe(delay(500))\r\n            .pipe(dematerialize());\r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/users/authenticate') && method === 'POST':\r\n                    return authenticate();\r\n                case url.endsWith('/users/register') && method === 'POST':\r\n                    return register();\r\n                case url.endsWith('/users') && method === 'GET':\r\n                    return getUsers();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\r\n                    return getUserById();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'PUT':\r\n                    return updateUser();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\r\n                    return deleteUser();\r\n                default:\r\n                    // pass through any requests not handled above\r\n                    return next.handle(request);\r\n            }    \r\n        }\r\n\r\n        // route functions\r\n\r\n        function authenticate() {\r\n            const { username, password } = body;\r\n            const user = users.find(x => x.username === username && x.password === password);\r\n            if (!user) return error('Username or password is incorrect');\r\n            return ok({\r\n                id: user.id,\r\n                username: user.username,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                token: 'fake-jwt-token'\r\n            })\r\n        }\r\n\r\n        function register() {\r\n            const user = body\r\n\r\n            if (users.find(x => x.username === user.username)) {\r\n                return error('Username \"' + user.username + '\" is already taken')\r\n            }\r\n\r\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n            users.push(user);\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        function getUsers() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n            return ok(users);\r\n        }\r\n\r\n        function getUserById() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            const user = users.find(x => x.id === idFromUrl());\r\n            return ok(user);\r\n        }\r\n\r\n        function updateUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            let params = body;\r\n            let user = users.find(x => x.id === idFromUrl());\r\n\r\n            // only update password if entered\r\n            if (!params.password) {\r\n                delete params.password;\r\n            }\r\n\r\n            // update and save user\r\n            Object.assign(user, params);\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n\r\n            return ok();\r\n        }\r\n\r\n        function deleteUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            users = users.filter(x => x.id !== idFromUrl());\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        // helper functions\r\n\r\n        function ok(body?) {\r\n            return of(new HttpResponse({ status: 200, body }))\r\n        }\r\n\r\n        function error(message) {\r\n            return throwError({ error: { message } });\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n        }\r\n\r\n        function idFromUrl() {\r\n            const urlParts = url.split('/');\r\n            return parseInt(urlParts[urlParts.length - 1]);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fakeBackendProvider = {\r\n    // use fake backend in place of Http service for backend-less development\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: FakeBackendInterceptor,\r\n    multi: true\r\n};","export * from './auth.guard';\r\nexport * from './error.interceptor';\r\nexport * from './jwt.interceptor';\r\nexport * from './fake-backend';","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { AccountService } from '@app/_services';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to the api url\r\n        const user = this.accountService.userValue;\r\n        const isLoggedIn = user && user.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${user.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","export class Alert {\r\n    id: string;\r\n    type: AlertType;\r\n    message: string;\r\n    autoClose: boolean;\r\n    keepAfterRouteChange: boolean;\r\n    fade: boolean;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","export * from './alert';\r\nexport * from './user';","export class User {\r\n    id: string;\r\n    username: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    token: string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { User } from '@app/_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountService {\r\n    private userSubject: BehaviorSubject<User>;\r\n    public user: Observable<User>;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: HttpClient\r\n    ) {\r\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\r\n        this.user = this.userSubject.asObservable();\r\n    }\r\n\r\n    public get userValue(): User {\r\n        return this.userSubject.value;\r\n    }\r\n\r\n    login(username, password) {\r\n        return this.http.post<User>(`${environment.apiUrl}/users/authenticate`, { username, password })\r\n            .pipe(map(user => {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n                this.userSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage and set current user to null\r\n        localStorage.removeItem('user');\r\n        this.userSubject.next(null);\r\n        this.router.navigate(['/account/login']);\r\n    }\r\n\r\n    register(user: User) {\r\n        return this.http.post(`${environment.apiUrl}/users/register`, user);\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n    }\r\n\r\n    getById(id: string) {\r\n        return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\r\n    }\r\n\r\n    update(id, params) {\r\n        return this.http.put(`${environment.apiUrl}/users/${id}`, params)\r\n            .pipe(map(x => {\r\n                // update stored user if the logged in user updated their own record\r\n                if (id == this.userValue.id) {\r\n                    // update local storage\r\n                    const user = { ...this.userValue, ...params };\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n\r\n                    // publish updated user to subscribers\r\n                    this.userSubject.next(user);\r\n                }\r\n                return x;\r\n            }));\r\n    }\r\n\r\n    delete(id: string) {\r\n        return this.http.delete(`${environment.apiUrl}/users/${id}`)\r\n            .pipe(map(x => {\r\n                // auto logout if the logged in user deleted their own record\r\n                if (id == this.userValue.id) {\r\n                    this.logout();\r\n                }\r\n                return x;\r\n            }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Alert, AlertType } from '@app/_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private defaultId = 'default-alert';\r\n\r\n    // enable subscribing to alerts observable\r\n    onAlert(id = this.defaultId): Observable<Alert> {\r\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n    }\r\n\r\n    // convenience methods\r\n    success(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\r\n    }\r\n\r\n    error(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\r\n    }\r\n\r\n    info(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\r\n    }\r\n\r\n    warn(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\r\n    }\r\n\r\n    // main alert method    \r\n    alert(alert: Alert) {\r\n        alert.id = alert.id || this.defaultId;\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(id = this.defaultId) {\r\n        this.subject.next(new Alert({ id }));\r\n    }\r\n}","export * from './account.service';\r\nexport * from './alert.service';\r\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService, AlertService } from '@app/_services';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  users=null;\n  form: FormGroup;\n  firstName;\n  lastName;\n  username;\n  password;\n  id;\n  isAddMode: any;\n  flag;\n  constructor(\n    private accountService: AccountService,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private alertService: AlertService,\n    private router: Router,\n    \n    ) { }\n\n  ngOnInit() {\n    // 获取页面是否为添加页面\n    this.id = this.route.snapshot.params['id']\n    //改变sava执行方法\n    this.flag = !this.id;\n    \n    this.accountService.getAll()\n            .pipe(first())\n            .subscribe(users => this.users = users);\n    const passwordValidators = [Validators.minLength(6)];\n    if (this.isAddMode) {\n        passwordValidators.push(Validators.required);\n    }\n    this.id = this.route.snapshot.params['id'];\n    this.form = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', passwordValidators]\n    });\n    this.accountService.getById(this.id)\n      .pipe(first())\n      .subscribe(x => {\n        this.f.firstName.setValue(x.firstName);\n        this.f.lastName.setValue(x.lastName);\n        this.f.username.setValue(x.username);\n    });\n  }\n  onsubmit() {\n    if (this.flag) {\n      this.change()\n    } else {\n      this.create()\n    }\n  }\n  // 改当前用户的数据\n  private change() {\n    this.accountService.update(this.id, this.form.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.alertService.success('Update successful', { keepAfterRouteChange: true });\n          this.router.navigate(['..', { relativeTo: this.route }]);\n        },\n        error => {\n          this.alertService.error(error);\n        });\n  }\n  // 创建新用户\n  private create() {\n    this.accountService.register(this.form.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.alertService.success('Update successful', { keepAfterRouteChange: true });\n          this.router.navigate(['..', { relativeTo: this.route }]);\n        },\n        error => {\n          this.alertService.error(error);\n        });\n  }\n  get f() { return this.form.controls; }\n\n}\n","<nz-table #editRowTable nzBordered [nzData]=\"users\" nzTableLayout=\"fixed\" class=\"container\">\n      <thead>\n        <tr>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Username</th>\n          <th>Password</th>\n        </tr>\n      </thead>\n      <tbody>\n       <tr *ngFor=\"let user of editRowTable.data\">\n            <td><input nz-input type=\"text\" [(ngModel)]=\"firstName\"/></td>\n            <td><input nz-input type=\"text\" [(ngModel)]=\"lastName\"/></td>\n            <td><input nz-input type=\"text\" [value]=\"user.username\" [(ngModel)]=\"username\"/></td>\n            <td><input nz-input type=\"password\" [value]=\"user.password\" [(ngModel)]=\"password\"/></td>\n        </tr>\n            <button nz-button class=\"save\" nzType=\"primary\" (click)=\"onsubmit()\">Save</button>\n            <a routerLink=\"/users-table\" class=\"btn btn-link\" nzDanger>Cancel</a>\n      </tbody>\n    </nz-table>\n    <!-- [{\"firstName\":\"11\",\"lastName\":\"2\",\"username\":\"12345\",\"password\":\"123456\",\"id\":1},{\"firstName\":\"22\",\"lastName\":\"222\",\"username\":\"123456\",\"password\":\"123456\",\"id\":2}] -->","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home';\r\nimport { AuthGuard } from './_helpers';\r\nimport { UserTableComponent } from './user-table/user-table.component';\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\n\r\nconst accountModule = () => import('./account/account.module').then(x => x.AccountModule);\r\nconst usersModule = () => import('./users/users.module').then(x => x.UsersModule);\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n    { path: 'users', loadChildren: usersModule, canActivate: [AuthGuard] },\r\n    { path: 'account', loadChildren: accountModule },\r\n    { path: 'users-table', component: UserTableComponent, },\r\n    { path: 'edit/:id', component: AddUserComponent, },\r\n\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\r\n\r\nimport { AccountService } from './_services';\r\nimport { User } from './_models';\r\n\r\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\r\nexport class AppComponent {\r\n    user: User;\r\n\r\n    constructor(private accountService: AccountService) {\r\n        this.accountService.user.subscribe(x => this.user = x);\r\n    }\r\n\r\n    logout() {\r\n        this.accountService.logout();\r\n    }\r\n}","<!-- nav -->\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\n    <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\">Users</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/users-table\" routerLinkActive=\"active\">my-Users</a>\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n    </div>\n</nav>\n\n<!-- main app container -->\n<div class=\"app-container\" [ngClass]=\"{ 'bg-light': user }\">\n    <alert></alert>\n    <router-outlet></router-outlet>\n</div>\n\n<!-- credits -->\n<div class=\"text-center mt-4\">\n    <p>\n        <a href=\"https://jasonwatmore.com/post/2020/04/28/angular-9-user-registration-and-login-example-tutorial\" target=\"_top\">Angular 9 - User Registration and Login Example & Tutorial</a>\n    </p>\n    <p>\n        <a href=\"https://jasonwatmore.com\" target=\"_top\">JasonWatmore.com</a>\n    </p>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule , FormsModule} from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// used to create fake backend\nimport { fakeBackendProvider } from './_helpers';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\nimport { AppComponent } from './app.component';\nimport { AlertComponent } from './_components';\nimport { HomeComponent } from './home';\nimport { UserTableComponent } from './user-table/user-table.component';;\n// tslint:disable-next-line:import-spacing\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n;\nimport { NZ_I18N } from 'ng-zorro-antd/i18n';\nimport { en_US } from 'ng-zorro-antd/i18n';\nimport { registerLocaleData, LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport en from '@angular/common/locales/en';\n\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { NzInputModule } from 'ng-zorro-antd/input';\n\nregisterLocaleData(en);\n@NgModule({\n   imports: [\n      BrowserModule,\n      ReactiveFormsModule,\n      HttpClientModule,\n      AppRoutingModule,\n      FormsModule ,\n      BrowserAnimationsModule,\n      NzTableModule,  \n      NzDividerModule,\n      NzButtonModule,\n      NzInputModule\n    ],\n   declarations: [\n      AppComponent,\n      AlertComponent,\n      HomeComponent,\n      UserTableComponent,\n      AddUserComponent\n   ],\n   providers:[\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n      { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n      { provide: LocationStrategy, useClass: HashLocationStrategy },\n\n    // provider used to create fake backend\n    fakeBackendProvider\n,\n\n    { provide: NZ_I18N, useValue: en_US }   ],\n   bootstrap: [\n      AppComponent\n   ]\n,\n})\nexport class AppModule { };","import { Component } from '@angular/core';\r\n\r\nimport { User } from '@app/_models';\r\nimport { AccountService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'home.component.html' })\r\nexport class HomeComponent {\r\n    user: User;\r\n\r\n    constructor(private accountService: AccountService) {\r\n        this.user = this.accountService.userValue;\r\n    }\r\n}","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <h1>Hi {{user.firstName}}!</h1>\r\n        <p>You're logged in with Angular 9!!</p>\r\n        <p><a routerLink=\"/users\">Manage Users</a></p>\r\n    </div>\r\n</div>","export * from './home.component';","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '@app/_services';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-table',\n  templateUrl: './user-table.component.html',\n  styleUrls: ['./user-table.component.css']\n})\nexport class UserTableComponent implements OnInit {\n  users = null\n  constructor(private accountService: AccountService) { }\n\n  ngOnInit() {\n    this.accountService.getAll()\n            .pipe(first())\n            .subscribe(users => this.users = users);\n  }\n  deleteUser(id: string) {\n    const user = this.users.find(x => x.id === id);\n    user.isDeleting = true;\n    this.accountService.delete(id)\n        .pipe(first())\n        .subscribe(() => {\n            this.users = this.users.filter(x => x.id !== id) \n        });\n}\n\n}\n","<nz-table #basicTable [nzData]=\"users\" class=\"container\" >\n  <thead>\n    <tr>\n      <th>First Name</th>\n      <th>Last Name</th>\n      <th>Username</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let user of basicTable.data\">\n      <td>{{user.firstName}}</td>\n      <td>{{user.lastName}}</td>\n      <td>{{user.username}}</td>\n      <td class=\"flex\">\n        <!-- <a>Action 一 {{user.name}}</a> -->\n        <nz-divider nzType=\"vertical\"></nz-divider>\n        <button (click)=\"deleteUser(user.id)\" nz-button nzType=\"primary\" [disabled]=\"user.isDeleting\">\n                    <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\n                    <span *ngIf=\"!user.isDeleting\">Delete</span>\n                </button>\n        <button nz-button nzType=\"primary\" nzDanger routerLink=\"/edit/{{user.id}}\">add</button>\n        <button nz-button nzType=\"primary\" nzGhost routerLink=\"/edit/{{user.id}}\">edit</button>\n\n      </td>\n    </tr>\n  </tbody>\n</nz-table>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n    apiUrl: 'http://localhost:4000'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.error(err));\r\n"]}